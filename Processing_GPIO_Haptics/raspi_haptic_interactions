import processing.io.*;

int redLEDp = 17;
int[] motorsP = {22, 23, 24, 25};

boolean redLED = false;

boolean[] motors = {false, false, false, false};

Box boxes;

Circle[] circles = new Circle[4];

color[] c = {
    #ff0066,
    #00ff77,
};
  
void setup()
{
  fullScreen();
  background(170, 150, 255);
  //noCursor();
  
  GPIO.pinMode(redLEDp, GPIO.OUTPUT);
  GPIO.digitalWrite(redLEDp, false);
  
  for (int i = 0; i < motors.length; i++)
  {
    GPIO.pinMode(motorsP[i], GPIO.OUTPUT);
    GPIO.digitalWrite(motorsP[i], false);
  }
  
  FloatList yPos = new FloatList();

  yPos.set(0, (height - 200));
  yPos.set(1, (height - 400));
  yPos.set(2, (height - 600));
  yPos.set(3, (height - 800));
  
  boxes = new Box((width / 1.5), (height / 2), 200, 200, c[0]);
  
  for (int i = 0; i < circles.length; i++)
  {
    circles[i] = new Circle((width / 4.5), (yPos.get(i)), 200, 200, c[1]);
  }
}

void draw()
{
  boxes.display(c[0]);
  
  for (int i = 0; i < circles.length; i++)
  {
    circles[i].display(c[1]);
  }
}

void mousePressed()
{ 
  boxes.interact();
  
  for (int i = 0; i < circles.length; i++)
  {
    int circNo = i;
    circles[i].interact(circNo);
  }
}

void mouseReleased()
{
  boxes.released();
  
  for (int i = 0; i < circles.length; i++)
  {
    circles[i].released();
  }
}

class Box
{
  float x;
  int y;
  int w;
  int h;
  
  color colour;
  
  Box(float xPos, int yPos, int wdth, int hght, color c)
  {
    x = xPos;
    y = yPos;
    w = wdth;
    h = hght;
    colour = c;
  }
  
  boolean redOn;
  
  boolean motor1On;
  
  void display(color c)
  {
    noStroke();
    fill(colour);
    rect(x, y, w, h);
    colour = c;
  }
  
  void interact()
  {
    if (mouseX > x - w && mouseX < x + w && 
         mouseY < y + h && mouseY > y - h / 2)
    {
      
       colour = color(255); 
       redLED = !redLED;
       GPIO.digitalWrite(redLEDp, redLED);
       redOn = !redOn;
       println("clicked red"); 
    }
  }
  
  void released()
  {
    if (redOn)
    {
      redLED = !redLED;
      GPIO.digitalWrite(redLEDp, redLED);
      redOn = !redOn;
    }
  }
}


class Circle
{
  float x;
  float y;
  int w;
  int h;
  
  color colour;
  
  Circle(float xPos, float yPos, int wdth, int hght, color c)
  {
    x = xPos;
    y = yPos;
    w = wdth;
    h = hght;
    colour = c;
  }
   
  boolean[] motorsOn = {false, false, false, false};
  
  void display(color c)
  {
    noStroke();
    fill(colour);
    ellipse(x, y, w, w);
    colour = c;
  }
  
  void interact(int circNo)
  {
    if (mouseX > x - (w / 2) && mouseX < x + (w / 2) && 
         mouseY < y + (w / 2) && mouseY > y - (w / 2))
    {
      //for (int i = 0; i < motors.length; i++)
      if (circNo == 0)
      {
        colour = color(255); 
        motors[0] = !motors[0];
        GPIO.digitalWrite(motorsP[0], motors[0]);
        motorsOn[0] = !motorsOn[0];
        println("motor pin = " + motorsP[0]);  
      }
      else if (circNo == 1)
      {
        colour = color(255); 
        motors[1] = !motors[1];
        GPIO.digitalWrite(motorsP[1], motors[1]);
        motorsOn[1] = !motorsOn[1];
        println("motor pin = " + motorsP[1]);  
      }
      else if (circNo == 2)
      {
        colour = color(255); 
        motors[2] = !motors[2];
        GPIO.digitalWrite(motorsP[2], motors[2]);
        motorsOn[2] = !motorsOn[2];
        println("motor pin = " + motorsP[2]);  
      }
      else if (circNo == 3)
      {
        colour = color(255); 
        motors[3] = !motors[3];
        GPIO.digitalWrite(motorsP[3], motors[3]);
        motorsOn[3] = !motorsOn[3];
        println("motor pin = " + motorsP[3]);  
      }
    }
  }
  
  void released()
  {
    for (int i = 0; i < motors.length; i++)
    {
      if (motorsOn[i])
      {
        motors[i] = !motors[i];
        GPIO.digitalWrite(motorsP[i], motors[i]);
        motorsOn[i] = !motorsOn[i];
      }
    }
  }
}
